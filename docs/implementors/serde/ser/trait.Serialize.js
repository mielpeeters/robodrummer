(function() {var implementors = {
"neuroner":[["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"neuroner/commands/struct.TrainArgs.html\" title=\"struct neuroner::commands::TrainArgs\">TrainArgs</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"neuroner/commands/struct.GenerateDataArgs.html\" title=\"struct neuroner::commands::GenerateDataArgs\">GenerateDataArgs</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"neuroner/commands/struct.EucledeanArgs.html\" title=\"struct neuroner::commands::EucledeanArgs\">EucledeanArgs</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"neuroner/commands/struct.NPDAGArgs.html\" title=\"struct neuroner::commands::NPDAGArgs\">NPDAGArgs</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"neuroner/reservoir/struct.Reservoir.html\" title=\"struct neuroner::reservoir::Reservoir\">Reservoir</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"neuroner/commands/enum.RhythmAlgorithm.html\" title=\"enum neuroner::commands::RhythmAlgorithm\">RhythmAlgorithm</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.188/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"neuroner/commands/struct.PolyEuclideanArgs.html\" title=\"struct neuroner::commands::PolyEuclideanArgs\">PolyEuclideanArgs</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()