var searchIndex = new Map(JSON.parse('[\
["robodrummer",{"doc":"This crate contains all code for the RoboDrummer project.","t":"CQCCCCCCCCCCCCCCCCCCCGPPPPNNNNNNNNNNNNNNNNNHNHHNNNNNNNNNNFNNOONNNONNNNNNNNONNNNNNNNFPFGPFPPFGPFPPFGPFGFPSPFPPFPSSPFPPFPFSSGPFGPPFGPFPPPFGPFPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHOOOONONNNNNNNNNNNNNNNNNNNNHNOOONOONNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOHOOOOONOOOOOOOOOOOOOOOOOOHOONNNNNNNOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOSIFNNHHNNNNNNNHHNONNHHHHHNONNNNNNNPPPPPPGNNNNNNNNNNNNNNNNNNNNNNFPFGFPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHGGPPPPPPGGPPPPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGFPPONNNNNNNNNNNNNNNNNNNONNNNNNOONNNNNNNNNNNNNNNNNNOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHFFNONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOFONNNNNNNNNNONNNOOOONNNNNNNPPPPPGNNNNNNNNNNNNNNNHNNNNNNNNHHHHHHHHHHHHHHHHCCHCFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNONNNNNNNNNNNONNNNNONONNNNOONNNNNNNNNNNNNNIHHHH","n":["activation","add_data","arpeggio","commands","constants","data","errors","guier","hyper","messages","metronomer","midier","midiutils","oscutil","reservoir","robot","series","test_robot","trainutil","tui","utils","Activation","Linear","ReLu","Sigmoid","Tanh","apply","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","from_sample_","from_subset","init","into","is_in_subset","relu","serialize","sigmoid","tanh","to_owned","to_possible_value","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","value_variants","vzip","Arpeggio","borrow","borrow_mut","chord","current","deref","deref_mut","drop","duration","from","from_sample_","from_subset","init","into","is_in_subset","new","next_note","offset","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_chord","vzip","Arguments","Arpeggio","ArpeggioArgs","BrokerMode","CC","CCArgs","Chord","Combine","CombinerArgs","Command","Completions","CompletionsArgs","Delay","Dev","DevArgs","DevCommand","Drum","DrumArgs","DrumOutput","EucledeanArgs","Euclidean","FEEL_PORT","GenerateData","GenerateDataArgs","Grad","Hyper","HyperArgs","Inv","METRONOME_PORT","MIDI_PORT","Metronome","MetronomeArgs","Midi","MidiBroker","MidiBrokerArgs","NPDAG","NPDAGArgs","OSC_PORT","OUTPUT_PORT","OutputMode","PolyEuclidean","PolyEuclideanArgs","RhythmAlgorithm","Robot","Robot","RobotArgs","RobotCommand","Run","RunArgs","Single","Sweep","Train","TrainArgs","TrainMode","Tui","TuiArgs","WaveType","activation","algorithm","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpm","broke","cc","channel","channel","channel","channel_str","chord_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine","command","command","command","command","command_for_update","connectivity","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delay","density","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev","device","device","dont_stop_early","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","duration_s","feel_port","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gendata","grid","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","k","k","k_in","key_in","key_out","leak_rate","learning_rate","list","list_data","metro_port","metronome","metronome_port","midi_port","midi_port","mode","mode","mode_str","model","n","n","n_in","network_port","non_negative","note","npy","offset","osc_port","output","output","output","output_publish","outputs","path","port","regularization","run","scale","scale","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shell","shift","shift","size","spectral_radius","split","steady_state","subdivision","target_width","threshold","timestep","timestep","timestep","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_possible_value","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","train","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tui","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_completions","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","value_variants","value_variants","variance","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","OUTPUT_NEURON_DIRECT_FEEDBACK","Data","TrainData","borrow","borrow_mut","data_dir","data_metadata_string","deref","deref_mut","deserialize","drop","from","from_sample_","from_subset","get_data_metadata","get_model_metadata","init","inputs","into","is_in_subset","list_data","list_models","load_train_data","model_metadata_string","models_dir","serialize","targets","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","CantConnectMidi","CantCreateMidiOut","DataNotFound","FileNotFound","IndexOutOfRange","ModelNotFound","NeuronError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from_sample_","from_subset","init","into","is_in_subset","to_compact_string","to_sample_","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Graph","Graph","Gui","Row","Text","Text","add_graph","add_row","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","disable","drop","drop","drop","drop","enabled","from","from","from","from","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","init","init","init","init","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","new","new","new","replace","replace_graph","show","show","show","show","to_sample_","to_sample_","to_sample_","to_sample_","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","update","update_row","vzip","vzip","vzip","vzip","hyper","CombinerMessage","CombinerUpdate","Error","Error","Error","Heartbeat","Heartbeat","InputNotes","MetronomeMessage","MidiNoteMessage","MidiNotes","MidiOptions","MidiOptions","MidiSelected","MidiSelected","MidiTuiMessage","NetworkMessage","Output","Output","OutputNote","Tempo","Threshold","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","init","init","init","init","init","init","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_input","serialize","to_bytes","to_compact_string","to_compact_string","to_compact_string","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","frequency","inputwindow","spectrum","FrequencyComponent","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","fmt","fmt","from","from_sample_","from_subset","init","into","is_in_subset","partial_cmp","to_compact_string","to_owned","to_sample_","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BandedInterval","Fourier","HitAction","InputWindow","Interval","NoFourier","best_frequency","borrow","borrow","borrow_mut","borrow_mut","create_fft_buffer","deref","deref","deref_mut","deref_mut","drop","drop","eq","from","from","from_sample_","from_sample_","from_subset","from_subset","hit","hit_count","init","init","into","into","is_in_subset","is_in_subset","max_band","min_band","new_with_size","plot_decision","set_band","show_window","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","window","Spectrum","SpectrumIterator","band_pass","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_iter","from_sample_","from_sample_","from_subset","from_subset","high_pass","init","init","into","into","into_iter","into_iter","is_in_subset","is_in_subset","low_pass","next","normalize","progress_with","spectral_sum","to_owned","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","available_devices","connect_output","create_midi_input_and_connect","create_midi_output","create_midi_output_and_connect","send_beat","send_note","setup_midi_receiver","play_model","send_beat","create_socket","decode","encode","rcv_osc_msg","send_osc_msg","Reservoir","ReservoirBuilder","activation","activation","adjust_damping","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","data","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","forward","forward_external","from","from","from_args","from_grid","from_npy","from_sample_","from_sample_","from_size_input_outputs","from_subset","from_subset","generate_sparse","get_output","get_visible_state","init","init","inputs","into","into","is_in_subset","is_in_subset","leak_rate","leak_rate","learning_rate","load_from_file","load_from_name","new_builder","output","plot","regularization","reset_state","save","save_to_file","scale","serialize","set_weights_out","to_compact_string","to_owned","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","train","train_mse_grad","train_step","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","weights_res_out","NpyMetaData","bias_path","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","from_sample_","from_subset","in_res_path","init","into","is_in_subset","leak_rate","n","out_path","res_res_path","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Pulse","Saw","Sine","Slope","SlowSaw","WaveType","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_sample_","from_subset","generate","init","into","is_in_subset","start","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","constant","impulse_pause","impulse_width_pause","linear","saw_with","sine_speed_up","sine_with","spike","meas_delay","robot","sweep","test_waves","add_data","add_series_data","create_progress_bar","say","app","popup","start_tui","ui","App","AppMode","Error","Normal","Setup","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","into","into","is_in_subset","is_in_subset","render","run","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PopupError","PopupInput","borrow","borrow","borrow_mut","borrow_mut","default","default","deref","deref","deref_mut","deref_mut","drop","drop","error","error","fmt","fmt","from","from","from_sample_","from_sample_","from_subset","from_subset","init","init","input","input","into","into","is_in_subset","is_in_subset","options","options","question","question","render","render","title","title","title","title","to_sample_","to_sample_","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Tui","init","restore","get_last_sent","get_last_sent_timeout"],"q":[[0,"robodrummer"],[21,"robodrummer::activation"],[57,"robodrummer::arpeggio"],[83,"robodrummer::commands"],[960,"robodrummer::constants"],[961,"robodrummer::data"],[994,"robodrummer::errors"],[1023,"robodrummer::guier"],[1119,"robodrummer::hyper"],[1120,"robodrummer::messages"],[1265,"robodrummer::metronomer"],[1268,"robodrummer::metronomer::frequency"],[1297,"robodrummer::metronomer::inputwindow"],[1351,"robodrummer::metronomer::spectrum"],[1403,"robodrummer::midier"],[1411,"robodrummer::midiutils"],[1413,"robodrummer::oscutil"],[1418,"robodrummer::reservoir"],[1497,"robodrummer::reservoir::data"],[1524,"robodrummer::robot"],[1554,"robodrummer::series"],[1562,"robodrummer::test_robot"],[1566,"robodrummer::trainutil"],[1570,"robodrummer::tui"],[1574,"robodrummer::tui::app"],[1621,"robodrummer::tui::popup"],[1677,"robodrummer::tui::ui"],[1680,"robodrummer::utils"],[1682,"core::result"],[1683,"serde::de"],[1684,"core::fmt"],[1685,"core::fmt"],[1686,"clap_builder::builder::possible_value"],[1687,"core::option"],[1688,"core::any"],[1689,"clap_builder::builder::command"],[1690,"std::sync::mpsc"],[1691,"core::error"],[1692,"alloc::boxed"],[1693,"alloc::string"],[1694,"std::sync::mpsc"],[1695,"clap_builder"],[1696,"clap_builder::util::id"],[1697,"compact_str"],[1698,"std::path"],[1699,"core::fmt"],[1700,"core::cmp"],[1701,"num_complex"],[1702,"core::iter::traits::collect"],[1703,"indicatif::progress_bar"],[1704,"indicatif::iter"],[1705,"midir::common"],[1706,"midir::common"],[1707,"core::ops::function"],[1708,"midi_control::message"],[1709,"std::net::udp"],[1710,"rosc::types"],[1711,"rosc::errors"],[1712,"ndarray::aliases"],[1713,"ndarray::aliases"],[1714,"ndarray::aliases"],[1715,"core::sync::atomic"],[1716,"alloc::sync"],[1717,"cpal::platform::platform_impl"],[1718,"cpal"],[1719,"std::thread"],[1720,"core::ops::function"],[1721,"ratatui::layout::rect"],[1722,"ratatui::buffer::buffer"],[1723,"std::io::error"],[1724,"core::time"],[1725,"core::fmt"]],"d":["This module defines and implements the available …","","","This module defines the command line interface for the …","Some constants which control the default model behaviour.","","This module defines some errors which are used throughout …","Simple module for showing some information in the terminal","","Messages that are sent to the TUI to inform about the …","","","","","","Connecting to the robot using the audio card’s output","This module implements some useful timeseries to use as …","","This module provides some functionality for training the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","For playing arpeggios out of the combiner","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","offset to play the notes at (12 for an octave)","","","","","","","","","","","","","","","","","","","","","","","","","","Arguments for the drum output mode","","","","","","","","","","","","","","","Output to midi, without delay compensation","","","","","","","","","","","Output to audio, used by the robot to control the motor. …","","","","","","","","","","","","","","The activation function to use","The algorithm used to generate rhythmic patterns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The beats per minute on which the model is trained","handle midi incomping messages","The midi CC value to adjust","The channel to filter inputs on","The midi channel to output on","The midi channel to output on","","The amount of notes that make up a chord","","","","","","","","","","","","","","","","","","","","","","","The subcommand to run","the test to run","The test to run","","connectivity","The name of the train data","","","","","","","","","","","","","","","","The amount of delay compensation to apply [ms]","Chebyshev density (amount of zeros per beat, approximately)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The device to listen on","The MIDI device (if not given, is interactively asked)","Do not prematurely stop if the error increases","","","","","","","","","","","","","","","","","","","","","","","","","","","Duration of arpeggio notes","The amount of seconds of data to generate","port of the rhythmic feel publisher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate input-output data to train the reservoir, based …","Use the grid structure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of reservoir inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The amount of iterations","The amount of onsets in the euclidean rhythm","The amount of onsets in the euclidean rhythm","The amount of onsets in the euclidean rhythm","The note value to filter input on","The note value to filter output on","Neuron leak rate","Training step: learning rate","List the available model names","List the available data names","port of the metronome publisher","","","Port on which the midi inputs come in","The port on which to listen for midi chords","The train update that’s used for offline training","The mode to operate on","","The name of the model","The amount of pulses in the euclidean rhythm","The amount of pulses in the euclidean rhythm","The amount of pulses in the euclidean rhythm","Port on which the network output is published using zmq","The output cannot go below the offset","The midi output note number","Use python-exported data","Offset value around which to evolve the cc output","Port on which the network output is published using osc","The output name to write the data to (saved at …","output mode","Select either MIDI or Robot output","Whether or not to output the midi messages of some channel","Amount of reservoir outputs","path to parameter file","The port on which to publish midi messages","Regularization parameter","run the selected model, determined by the parameters in …","The amount with which to scale (speed up) the rhythm …","The scaling between the user and the system","","","","","","","","The shell for which to generate completions (only zsh …","Shift the target data to achieve delay compensation [ms]","The shift at which the rhythmic activity model was trained …","The size of the reservoir","spectral radius","Split between train and test","Should the data generate a steady-state input phase …","Subdivision of metronome beat","The width of a target value","threshold for model output selection","The amount of ms between evaluations","The amount of ms between evaluations","The timestep of the network output [mshe variance to apply to the input data (is actually std …","","","","","","","","","","","","","","","","","","","","","","","","","","","The width (# timesteps) of an input","the width of the adjustment","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","Load the training data from a <code>.bin</code> file","","","","","","","","","","","","","","","","Index was not in allowed range (index, length)","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The TUI can send these messages to the combiner to update …","An error occurred","Network encountered an error","Metronome encountered an error","Heartbeat to check if connection is alive","","The midi notes of the user input","","","A message about the midi note(s) that were played","Midi options the user can select between","Midi options the user can select between","The selected midi option","The selected midi option","","","The network’s last output","The output state at some percentage in the loop","A midi note at the output","The metronome’s last tempo estimate (in Hz)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","(frequency, amount)","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Calculate the fourier transform every period and adjust …","Calculate the fourier transform every hit","The different options for what to perform on a hit","The InputWindow keeps memory of the input hits and fourier …","Calculate the fourier transform once for every period","Do nothing","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Add a hit to the input window, using the given HitAction …","The number of hits","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The window keeps track of times of hits","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A ESN (Echo State Network) reservoir.","A builder for the Reservoir struct.","","activation function","","","","","","","","","Data handling for the reservoir: saving and loading models","","","","","","","","","","forward the externally supplied state, and return the …","Returns the argument unchanged.","Returns the argument unchanged.","","Create a reservoir with a grid structure.","","","","","","","Set the sparse representation if it doesn’t already exist","","","","","number of inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","leak rate of the neurons","","","","","output layer of the reservoir","","","","","","","","","","","","","","","","","","Fully train the network","Perform some gradient descent training steps on the …","Train the reservoir using the pseudo-inverse method.","","","","","","","","","output weights (reservoir -&gt; output) these are the …","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A pulse wave with given width in seconds","A single sawtooth with given width","A sine wave with given frequency and width","A parabolic sloping descent","A saw that slowly goes up too","Wave types should be able to generate a vector of samples","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Start the audio engine and pass signals to the robot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error by some child thread: (title, message)","","The user is in setup mode, and has answered the given …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","runs the application’s main loop until the user quits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the <code>error</code> field of this struct.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Sets the <code>input</code> field of this struct.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Sets the <code>options</code> field of this struct.","","Sets the <code>question</code> field of this struct.","","","","Sets the <code>title</code> field of this struct.","Sets the <code>title</code> field of this struct.","","","","","","","","","","","","","","","","","A type alias for the terminal type used in this application","Initialize the terminal","Restore the terminal to its original state","Non-blocking receiving calls to the receiver until the …","Non-blocking receiving calls to the receiver until the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,29,0,0,29,0,27,46,0,0,46,0,51,46,0,0,29,0,0,0,39,0,46,0,26,49,0,26,0,0,46,0,31,46,0,39,0,0,0,0,39,0,0,31,49,0,0,46,0,27,51,46,0,0,46,0,51,37,38,45,25,37,38,40,42,43,47,19,28,30,32,33,48,44,50,52,41,45,25,37,38,40,42,43,47,19,28,30,32,33,48,44,50,52,41,46,39,29,49,51,46,39,29,49,51,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,38,0,32,19,32,33,19,19,25,26,19,27,28,29,30,31,32,33,25,26,19,27,28,29,30,31,32,33,0,45,45,44,50,45,37,37,25,37,26,38,39,40,19,27,28,29,30,31,32,33,41,30,38,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,37,26,38,39,40,42,43,0,19,28,37,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,33,38,28,45,46,25,37,26,26,38,39,39,40,42,43,47,19,27,28,29,29,30,31,31,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,45,46,25,37,38,39,40,42,43,47,19,28,29,30,32,33,48,44,49,50,51,52,41,45,46,25,37,38,39,40,42,43,47,19,28,29,30,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,0,37,45,25,37,38,40,42,43,47,19,28,30,32,33,48,44,50,52,41,46,39,29,49,51,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,37,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,37,40,43,43,19,19,37,37,25,37,28,0,25,25,33,37,19,19,25,40,43,43,25,32,28,37,32,25,38,28,30,19,37,52,19,37,0,38,43,37,26,38,39,40,42,43,47,37,30,37,37,37,38,28,37,28,25,37,30,26,39,29,31,25,26,19,27,28,29,30,31,32,33,26,27,31,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,26,39,29,31,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,0,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,0,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,0,45,46,25,37,38,39,40,42,43,47,19,28,29,30,32,33,48,44,49,50,51,52,41,45,46,25,37,38,39,40,42,43,47,19,28,29,30,32,33,48,44,49,50,51,52,41,26,27,31,38,45,46,25,37,26,38,39,40,42,43,47,19,27,28,29,30,31,32,33,48,44,49,50,51,52,41,37,32,0,0,0,61,61,0,0,61,61,61,61,61,61,61,0,0,61,61,61,61,0,0,0,0,0,61,61,61,61,61,61,61,61,61,63,63,63,63,63,63,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,66,0,0,0,66,64,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,64,66,67,68,64,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,67,68,64,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,66,67,68,64,0,0,0,20,58,57,20,34,69,0,0,20,20,57,20,57,0,0,58,34,69,57,35,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,69,20,58,57,34,35,69,20,58,57,69,20,58,57,34,35,69,69,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,69,69,69,20,58,57,20,58,57,34,35,69,20,58,57,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,20,58,57,34,35,69,0,0,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,75,75,0,0,75,75,73,73,75,73,75,73,73,75,73,75,73,75,75,73,75,73,75,73,75,73,73,73,75,73,75,73,75,73,73,73,73,73,73,73,75,73,75,73,75,73,75,73,75,73,75,73,75,73,0,0,76,79,76,79,76,76,76,76,79,76,79,76,79,76,79,76,76,79,76,79,76,76,79,76,79,76,79,76,79,76,76,79,76,79,76,76,79,76,79,76,79,76,79,76,79,76,79,76,79,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,91,91,96,91,96,91,96,91,91,0,96,91,96,91,91,96,91,91,91,91,96,91,91,96,96,96,91,96,96,91,91,91,91,96,91,91,96,91,96,91,96,91,96,91,91,91,91,91,96,91,91,91,91,91,91,91,91,96,91,91,96,91,96,91,91,91,91,96,91,96,91,96,91,96,91,91,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,102,102,102,102,102,102,102,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,112,112,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,113,113,112,113,112,113,112,113,112,113,112,113,112,113,112,113,0,0,118,119,118,119,118,119,118,119,118,119,118,119,119,119,118,119,118,119,118,119,118,119,118,119,118,118,118,119,118,119,118,118,118,118,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,118,119,0,0,0,0,0],"f":"``````````````````````````{{bd}d}{ce{}{}}0{bb}{{ce}f{}{}}{{}b}{hc{}}0{c{{j{b}}}l}{hf}{{bn}A`}{cc{}}08{{}h}9{cAb{}}{dd}{{bc}jAd}11<{b{{Ah{Af}}}}={c{{Ah{e}}}{}{}}>{c{{j{e}}}{}{}}0{cAj{}}{{}{{Al{b}}}}{ce{}{}}`00``>><`::0908{{{Al{An}}B`h}Bb}{BbAn}`262554{{Bb{Al{An}}}f}3```````````````````````````````````````````````````````````{BdBd}0000000000000000000000000000000000000000000004444444444444444444444444444444444444444444444444444`{{Bf{Ah{{Bj{Bh}}}}}{{j{f{Bn{Bl}}}}}}````{BfC`}`{CbCb}{CdCd}{BfBf}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{D`D`}{DbDb}{{ce}f{}{}}000000000{{Ch{Ah{{Bj{Dd}}}}{Ah{{Dh{Df}}}}}{{j{f{Bn{Bl}}}}}}{{}Bd}```0``{{}Cb}{{}Dj}{{}Cd}{{}Dl}{{}Dn}{{}E`}{{}Bf}{{}Cf}{{}Ch}{{}Cj}{{}Cl}{{}Cn}{{}D`}{{}Db}{{}Eb}``{hc{}}000000000000000000000000000000000000000000000000000{c{{j{Dj}}}l}{c{{j{Cd}}}l}{c{{j{Dl}}}l}{c{{j{Dn}}}l}{c{{j{E`}}}l}{c{{j{Ed}}}l}{c{{j{Ef}}}l}{Eh{{j{f{Bn{Bl}}}}}}```{hf}0000000000000000000000000```{{Ejn}A`}{{Eln}A`}{{Cbn}A`}{{Djn}A`}{{Cdn}A`}0{{Dln}A`}{{Dnn}A`}0{{E`n}A`}{{Edn}A`}{{Efn}A`}{{Enn}A`}{{Bfn}A`}{{Cfn}A`}{{Chn}A`}{{Cjn}A`}0{{Cln}A`}{{Cnn}A`}0{{D`n}A`}{{Dbn}A`}{{F`n}A`}{{Ehn}A`}{{Fbn}A`}{{Fdn}A`}{{Ffn}A`}{{Fhn}A`}{{Ebn}A`}{cc{}}0000000000000000000000000{Fj{{j{EjFl}}}}{Fj{{j{ElFl}}}}{Fj{{j{CbFl}}}}{Fj{{j{DjFl}}}}{Fj{{j{DlFl}}}}{Fj{{j{DnFl}}}}{Fj{{j{E`Fl}}}}{Fj{{j{EdFl}}}}{Fj{{j{EfFl}}}}{Fj{{j{EnFl}}}}{Fj{{j{BfFl}}}}{Fj{{j{ChFl}}}}{Fj{{j{CjFl}}}}{Fj{{j{ClFl}}}}{Fj{{j{D`Fl}}}}{Fj{{j{DbFl}}}}{Fj{{j{F`Fl}}}}{Fj{{j{EhFl}}}}{Fj{{j{FbFl}}}}{Fj{{j{FdFl}}}}{Fj{{j{FfFl}}}}{Fj{{j{FhFl}}}}{Fj{{j{EbFl}}}}{Fj{{j{EjFl}}}}{Fj{{j{ElFl}}}}{Fj{{j{CbFl}}}}{Fj{{j{DjFl}}}}{Fj{{j{DlFl}}}}{Fj{{j{DnFl}}}}{Fj{{j{E`Fl}}}}{Fj{{j{EdFl}}}}{Fj{{j{EfFl}}}}{Fj{{j{EnFl}}}}{Fj{{j{BfFl}}}}{Fj{{j{ChFl}}}}{Fj{{j{CjFl}}}}{Fj{{j{ClFl}}}}{Fj{{j{D`Fl}}}}{Fj{{j{DbFl}}}}{Fj{{j{F`Fl}}}}{Fj{{j{EhFl}}}}{Fj{{j{FbFl}}}}{Fj{{j{FdFl}}}}{Fj{{j{FfFl}}}}{Fj{{j{FhFl}}}}{Fj{{j{EbFl}}}}{cc{}}0000000000000000000000000{ce{}{}}0000000000000000000000000{Dl{{j{f{Bn{Bl}}}}}}`{{}{{Ah{Fn}}}}00000000000000000{G`Ab}0000{{}h}0000000000000000000000000`44444444444444444444444444{cAb{}}0000000000000000000000000```````````{{Eb{Ah{{Bj{Gb}}}}}{{j{f{Bn{Bl}}}}}}`````{BfC`}``````````````````{{Cb{Ah{{Bj{Gd}}}}}{{j{f{Bn{Bl}}}}}}``{{Djc}jAd}{{Cdc}jAd}{{Dlc}jAd}{{Dnc}jAd}{{E`c}jAd}{{Edc}jAd}{{Efc}jAd}`````````````{cGf{}}000{ce{}{}}000000000{Cd{{Ah{Af}}}}{Cf{{Ah{Af}}}}{Cn{{Ah{Af}}}}33333333333333333333333333{cC`{}}000{c{{Ah{e}}}{}{}}000000000000000000000000055555555555555555555555555{Dj{{j{f{Bn{Bl}}}}}}{c{{j{e}}}{}{}}000000000000000000000000000000000000000000000000000`{cAj{}}0000000000000000000000000{En{{j{f{Bn{Bl}}}}}}{{EjFj}{{j{fFl}}}}{{ElFj}{{j{fFl}}}}{{CbFj}{{j{fFl}}}}{{DjFj}{{j{fFl}}}}{{DlFj}{{j{fFl}}}}{{DnFj}{{j{fFl}}}}{{E`Fj}{{j{fFl}}}}{{EdFj}{{j{fFl}}}}{{EfFj}{{j{fFl}}}}{{EnFj}{{j{fFl}}}}{{BfFj}{{j{fFl}}}}{{ChFj}{{j{fFl}}}}{{CjFj}{{j{fFl}}}}{{ClFj}{{j{fFl}}}}{{D`Fj}{{j{fFl}}}}{{DbFj}{{j{fFl}}}}{{F`Fj}{{j{fFl}}}}{{EhFj}{{j{fFl}}}}{{FbFj}{{j{fFl}}}}{{FdFj}{{j{fFl}}}}{{FfFj}{{j{fFl}}}}{{FhFj}{{j{fFl}}}}{{EbFj}{{j{fFl}}}}{{EjFj}{{j{fFl}}}}{{ElFj}{{j{fFl}}}}{{CbFj}{{j{fFl}}}}{{DjFj}{{j{fFl}}}}{{DlFj}{{j{fFl}}}}{{DnFj}{{j{fFl}}}}{{E`Fj}{{j{fFl}}}}{{EdFj}{{j{fFl}}}}{{EfFj}{{j{fFl}}}}{{EnFj}{{j{fFl}}}}{{BfFj}{{j{fFl}}}}{{ChFj}{{j{fFl}}}}{{CjFj}{{j{fFl}}}}{{ClFj}{{j{fFl}}}}{{D`Fj}{{j{fFl}}}}{{DbFj}{{j{fFl}}}}{{F`Fj}{{j{fFl}}}}{{EhFj}{{j{fFl}}}}{{FbFj}{{j{fFl}}}}{{FdFj}{{j{fFl}}}}{{FfFj}{{j{fFl}}}}{{FhFj}{{j{fFl}}}}{{EbFj}{{j{fFl}}}}{{}{{Al{Cd}}}}{{}{{Al{Cf}}}}{{}{{Al{Cn}}}}`{ce{}{}}0000000000000000000000000`````00{{}{{j{Gh{Bn{Bl}}}}}}{G`C`}{hc{}}0{c{{j{Gj}}}l}{hf}{cc{}}06{G`{{j{Dl{Bn{Bl}}}}}}{G`{{j{Dj{Bn{Bl}}}}}}{{}h}`9{cAb{}}{{}{{j{f{Bn{Bl}}}}}}0{{G`dhh{Ah{h}}}{{j{Gl{Bn{Bl}}}}}}:;{{Gjc}jAd}`={c{{Ah{e}}}{}{}}>{c{{j{e}}}{}{}}0{cAj{}}{ce{}{}}```````00>><{{Gnn}A`}0<<1918{cGf{}}2{cC`{}}635543``````{{H`G`dd}f}{{H`G`c}fHb}55555555{hc{}}0000000{HdG`}{H`f}{hf}000`{cc{}}0000000::::{{}h}000;;;;{cAb{}}000{{G`c}HfHb}{{G`dd}Hh}{G`H`}{{Hh{Al{B`}}}f}{{H`G`{Al{B`}}}f}{Hdf}{Hff}{Hhf}<{ce{}{}}000{c{{Ah{e}}}{}{}}0001111{c{{j{e}}}{}{}}0000000{cAj{}}000{{Hdc}fHb}{{Hfc}fHb}{{Hhc}fHb}{{H`G`c}fHb}7777{Fh{{j{f{Bn{Bl}}}}}}``````````````````````888888888888{hc{}}00000000000{c{{j{Hj}}}l}{hf}00000{{Bhn}A`}{{Gdn}A`}{{Gbn}A`}{{Hjn}A`}{cc{}}00000{{{Al{An}}}{{j{Hj{Bn{Bl}}}}}}111111{ce{}{}}00000{{}h}00000111111{cAb{}}00000{HjAb}{{Hjc}jAd}{Hj{{j{{Hl{An}}{Bn{Bl}}}}}}{cGf{}}00666666{cC`{}}00{c{{Ah{e}}}{}{}}00000888888{c{{j{e}}}{}{}}00000000000{cAj{}}00000::::::````::{HnHn}{{ce}f{}{}}{{}Hn}{hc{}}0{hf}{{HnHn}Ab}{{Hnn}A`}0{cc{}}0{ce{}{}}{{}h}1{cAb{}}{{HnHn}{{Ah{I`}}}}{cGf{}}44{cC`{}}{c{{Ah{e}}}{}{}}6{c{{j{e}}}{}{}}0{cAj{}}8```````8888{Ib{{Ah{{Hl{{Id{d}}}}}}}}>>>>=={{IfIf}Ab};;;;::{{IbIf}Ab}`::;;99``{{hd}Ib}{Ibf}00==77==666655==```{{Ihdd}Ih}>>>>{IhIh}{{ce}f{}{}}{{}Ih}{hc{}}000{hf}0{cc{}}0{cIh{{Il{}{{Ij{Hn}}}}}}11{ce{}{}}0{{Ihd}Ih}{{}h}0222{Ihc{}}{cAb{}}03{In{{Ah{Hn}}}}{Ihf}{{cJ`}{{Jb{e}}}{}{}}1777{c{{Ah{e}}}{}{}}088{c{{j{e}}}{}{}}000{cAj{}}0::{Ab{{Hl{C`}}}}{Jd{{j{Jf`}}}}{{ec{Ah{An}}}{{j{{Jh{c}}`}}}Jj{{Jn{Jl{Al{An}}c}}Jj}}{G`{{j{Jd`}}}}{{{Ah{An}}}{{j{Jf`}}}}{{JfK`}f}{{JfK`AnAn}f}{{{Ah{An}}{Ah{An}}{Ah{An}}}{{j{{Dh{{Kd{JlAnKb}}}}{Bn{Bl}}}}}}{{{Bn{Kf}}}f}3{Kh{{j{Kj{Bn{Bl}}}}}}{{{Al{An}}}{{j{{Kd{C`{Hl{Kl}}}}Kn}}}}{{G`{Hl{Kl}}}{{Hl{An}}}}{Kj{{Hl{{Kd{C`{Hl{Kl}}}}}}}}{{G`{Hl{Kl}}Kj}f}``{{L`b}L`}`{{Kfd}f}{ce{}{}}000{L`Kf}{KfKf}{{ce}f{}{}}`{hc{}}000{c{{j{Kf}}}l}{hf}0{{Kfn}A`}{{Kf{Lb{d}}}f}{{Kf{Lb{d}}{Lb{d}}}{{Lb{d}}}}{cc{}}0{DjKf}{{L`hhh}L`}{{L`Gh}L`}33{{L`hhhd}L`}>>{Kff}{{Kfh}d}{Kf{{Ld{d}}}}{{}h}0`{ce{}{}}0{cAb{}}0{{L`d}L`}`0{Gh{{j{Kf{Bn{Bl}}}}}}{G`{{j{Kf{Bn{Bl}}}}}}{{}L`}`{{KfDjc}{{j{f{Bn{Bl}}}}}{{Lf{Gh}}}}4:{{KfG`}{{j{f{Bn{Bl}}}}}}{{KfGh}{{j{f{Bn{Bl}}}}}}{{Kf{Ah{d}}}f}{{Kfc}jAd}{{Kf{Lh{d}}}f}{cGf{}}<<<{cC`{}}{c{{Ah{e}}}{}{}}0>>{{KfDj}{{j{d{Bn{Bl}}}}}}{{Kf{Al{{Lb{d}}}}{Al{{Ah{{Lb{d}}}}}}}d}{{Kf{Al{{Lb{d}}}}{Al{{Ah{{Lb{d}}}}}}h}d}{c{{j{e}}}{}{}}000{cAj{}}0{ce{}{}}0```00{hc{}}0{c{{j{Lj}}}l}{hf}{{Ljn}A`}{cc{}}05`{{}h}6{cAb{}}````7=79987``````77{LlLl}{{ce}f{}{}}886{{Lln}A`}55:{{LlB`}{{Ln{B`}}}}5;4{{{Mb{M`}}Ll}{{Kd{MdMf{Mh{f}}}}}}<<{c{{Ah{e}}}{}{}}=??>={d{{Bn{Mj}}}}0{{dMl}{{Bn{Mj}}}}{{Mldd}{{Bn{Mj}}}}{{Mlddd}{{Bn{Mj}}}}{{MlddMl}{{Bn{Mj}}}}12{{}{{j{f{Bn{Bl}}}}}}{Fd{{j{f{Bn{Bl}}}}}}11{{{Hl{{Lb{d}}}}{Al{d}}}f}{{{Hl{{Lb{d}}}}{Al{Mj}}{Mn{h}}}f}{{G`Jl}J`}{G`f}``{F`{{j{f{Bn{Bl}}}}}}``````{ce{}{}}000{{}N`}{{}Nb}{hc{}}000{hf}0{{N`n}A`}{{Nbn}A`}{cc{}}00077{{}h}088{cAb{}}0{{NbNdNf}f}{{NbNh}{{Nj{f}}}};;{c{{Ah{e}}}{}{}}0<<{c{{j{e}}}{}{}}000{cAj{}}0>>``>>>>{{}Nl}{{}Nn}====<<{{Nnc}Nn{{Lf{G`}}}}`{{Nln}A`}{{Nnn}A`}<<<<{ce{}{}}0<<{{NlG`}Nl}`11<<{{Nlc}Nl{{Lf{{Ah{{Al{C`}}}}}}}}`{{Nlc}Nl{{Lf{G`}}}}`{{NlNdNf}f}{{NnNdNf}f}28``55==55<<<<;;55`{{}{{Nj{Nh}}}}{{}{{Nj{f}}}}{{{Dh{c}}}{{Ah{c}}}{}}{{{Dh{c}}O`}{{Ah{c}}}Ob}","c":[],"p":[[6,"Activation",21],[1,"f64"],[1,"unit"],[1,"usize"],[6,"Result",1682],[10,"Deserializer",1683],[5,"Formatter",1684],[8,"Result",1684],[1,"bool"],[10,"Serializer",1685],[5,"PossibleValue",1686],[6,"Option",1687],[5,"TypeId",1688],[1,"slice"],[1,"u8"],[1,"f32"],[5,"Arpeggio",57],[5,"Command",1689],[5,"MidiBrokerArgs",83],[6,"MidiTuiMessage",1120],[5,"Sender",1690],[10,"Error",1691],[5,"Box",1692],[5,"String",1693],[5,"RunArgs",83],[6,"TrainMode",83],[6,"BrokerMode",83],[5,"CombinerArgs",83],[6,"OutputMode",83],[5,"DrumArgs",83],[6,"DrumOutput",83],[5,"CCArgs",83],[5,"ArpeggioArgs",83],[6,"CombinerMessage",1120],[6,"CombinerUpdate",1120],[5,"Receiver",1690],[5,"TrainArgs",83],[5,"GenerateDataArgs",83],[6,"RhythmAlgorithm",83],[5,"EucledeanArgs",83],[5,"MetronomeArgs",83],[5,"NPDAGArgs",83],[5,"PolyEuclideanArgs",83],[5,"DevArgs",83],[5,"Arguments",83],[6,"Command",83],[5,"CompletionsArgs",83],[5,"TuiArgs",83],[6,"DevCommand",83],[5,"RobotArgs",83],[6,"RobotCommand",83],[5,"HyperArgs",83],[5,"ArgMatches",1694],[8,"Error",1695],[5,"Id",1696],[1,"str"],[6,"MetronomeMessage",1120],[6,"NetworkMessage",1120],[5,"CompactString",1697],[5,"PathBuf",1698],[5,"TrainData",961],[8,"Data",961],[6,"NeuronError",994],[5,"Gui",1023],[10,"Display",1684],[6,"Row",1023],[5,"Text",1023],[5,"Graph",1023],[6,"MidiNoteMessage",1120],[5,"Vec",1699],[5,"FrequencyComponent",1268],[6,"Ordering",1700],[5,"InputWindow",1297],[5,"Complex",1701],[6,"HitAction",1297],[5,"Spectrum",1351],[17,"Item"],[10,"IntoIterator",1702],[5,"SpectrumIterator",1351],[5,"ProgressBar",1703],[5,"ProgressBarIter",1704],[5,"MidiOutput",1705],[5,"MidiOutputConnection",1705],[5,"MidiInputConnection",1705],[10,"Send",1706],[1,"u64"],[10,"FnMut",1707],[1,"u32"],[5,"KeyEvent",1708],[1,"tuple"],[5,"Reservoir",1418],[1,"u16"],[5,"UdpSocket",1709],[6,"OscType",1710],[6,"OscError",1711],[5,"ReservoirBuilder",1418],[8,"Array1",1712],[8,"ArrayView1",1712],[10,"Into",1713],[8,"Array2",1712],[5,"NpyMetaData",1497],[6,"WaveType",1524],[5,"VecDeque",1714],[5,"AtomicBool",1715],[5,"Arc",1716],[5,"Stream",1717],[5,"SupportedStreamConfig",1718],[5,"JoinHandle",1719],[10,"Fn",1707],[1,"i32"],[5,"Range",1720],[6,"AppMode",1574],[5,"App",1574],[5,"Rect",1721],[5,"Buffer",1722],[8,"Tui",1677],[8,"Result",1723],[5,"PopupInput",1621],[5,"PopupError",1621],[5,"Duration",1724],[10,"Debug",1684]],"b":[[389,"impl-Debug-for-TrainMode"],[390,"impl-Display-for-TrainMode"],[392,"impl-Display-for-RhythmAlgorithm"],[393,"impl-Debug-for-RhythmAlgorithm"],[401,"impl-Display-for-OutputMode"],[402,"impl-Debug-for-OutputMode"],[404,"impl-Debug-for-DrumOutput"],[405,"impl-Display-for-DrumOutput"],[1006,"impl-Display-for-NeuronError"],[1007,"impl-Debug-for-NeuronError"],[1278,"impl-Debug-for-FrequencyComponent"],[1279,"impl-Display-for-FrequencyComponent"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
