var searchIndex = new Map(JSON.parse('[\
["robodrummer",{"doc":"This crate contains all code for the RoboDrummer project.","t":"QCCCCCCCCCCFPFGPFPPFGPFPFGFPPFPPPPFPFGPFGPPFGPFPPPFGPFPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHOOOONONNNNNNNNNNNNNNNNHNOONOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOONOOOOOOOOOOOOOOOOHHOONNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOSIFNNHHNNNNNNNHHNONNHHHHHNONNNNNNNHHHHHHHHHHFFNONNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOFONNNNNNNNNNONNNOOOONNNNNNNPPPPPGNNNNNNNNNNNNNNNHNNNNNNNNHHHHHHHHHHHH","n":["add_data","commands","constants","data","midier","midiutils","oscutil","reservoir","robot","series","trainutil","Arguments","Arpeggio","ArpeggioArgs","BrokerMode","CC","CCArgs","Chord","Combine","CombinerArgs","Command","Completions","CompletionsArgs","Drum","DrumArgs","DrumOutput","EucledeanArgs","Euclidean","GenerateData","GenerateDataArgs","Grad","Inv","Midi","MidiBroker","MidiBrokerArgs","NPDAG","NPDAGArgs","OutputMode","PolyEuclidean","PolyEuclideanArgs","RhythmAlgorithm","Robot","Robot","RobotArgs","RobotCommand","Run","RunArgs","Single","Sweep","Train","TrainArgs","TrainMode","Tui","TuiArgs","WaveType","activation","algorithm","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpm","broke","cc","channel","channel","channel","channel_str","chord_size","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine","command","command","command","command_for_update","connectivity","data","default","default","default","default","default","default","default","default","delay","density","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device","dont_stop_early","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration","duration_s","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","from_subset","gendata","grid","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","has_subcommand","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","iter","k","k","k_in","leak_rate","learning_rate","list","list_data","metronome_port","midi_port","midi_port","mode","mode","mode_str","model","n","n","n_in","network_port","non_negative","npy","offset","offset","offset","osc_port","output","output","outputs","port","regularization","robot","run","scale","scale","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shell","shift","size","spectral_radius","split","steady_state","target_width","timestep","timestep","to_compact_string","to_compact_string","to_compact_string","to_compact_string","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","to_possible_value","to_possible_value","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_sample_","to_string","to_string","to_string","to_string","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","train","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tui","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_completions","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","value_variants","value_variants","variance","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","OUTPUT_NEURON_DIRECT_FEEDBACK","Data","TrainData","borrow","borrow_mut","data_dir","data_metadata_string","deref","deref_mut","deserialize","drop","from","from_sample_","from_subset","get_data_metadata","get_model_metadata","init","inputs","into","is_in_subset","list_data","list_models","load_train_data","model_metadata_string","models_dir","serialize","targets","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","create_midi_input_and_connect","create_midi_output_and_connect","send_beat","send_note","setup_midi_receiver","play_model","send_beat","create_socket","rcv_osc_msg","send_osc_msg","Reservoir","ReservoirBuilder","activation","activation","adjust_damping","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","data","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","forward","forward_external","from","from","from_args","from_grid","from_npy","from_sample_","from_sample_","from_size_input_outputs","from_subset","from_subset","generate_sparse","get_output","get_visible_state","init","init","inputs","into","into","is_in_subset","is_in_subset","leak_rate","leak_rate","learning_rate","load_from_file","load_from_name","new_builder","output","regularization","reset_state","save","save_to_file","scale","serialize","set_weights_out","to_compact_string","to_owned","to_sample_","to_sample_","to_string","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","train_mse_grad","train_step","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","weights_res_out","NpyMetaData","bias_path","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","from_sample_","from_subset","in_res_path","init","into","is_in_subset","leak_rate","n","out_path","res_res_path","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Pulse","Saw","Sine","Slope","SlowSaw","WaveType","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_sample_","from_subset","generate","init","into","is_in_subset","start","to_owned","to_sample_","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","constant","impulse_pause","impulse_width_pause","linear","saw_with","sine_speed_up","sine_with","spike","add_data","add_series_data","create_progress_bar","say"],"q":[[0,"robodrummer"],[11,"robodrummer::commands"],[745,"robodrummer::constants"],[746,"robodrummer::data"],[779,"robodrummer::midier"],[784,"robodrummer::midiutils"],[786,"robodrummer::oscutil"],[789,"robodrummer::reservoir"],[866,"robodrummer::reservoir::data"],[893,"robodrummer::robot"],[923,"robodrummer::series"],[931,"robodrummer::trainutil"],[935,"clap_builder::builder::command"],[936,"std::sync::mpsc"],[937,"core::option"],[938,"core::error"],[939,"alloc::boxed"],[940,"core::result"],[941,"alloc::string"],[942,"serde::de"],[943,"core::fmt"],[944,"core::fmt"],[945,"clap_builder"],[946,"clap_builder::util::id"],[947,"serde::ser"],[948,"compact_str"],[949,"clap_builder::builder::possible_value"],[950,"core::any"],[951,"std::path"],[952,"midir::common"],[953,"core::marker"],[954,"core::ops::function"],[955,"midir::common"],[956,"std::sync::mpsc"],[957,"rosc::types"],[958,"alloc::vec"],[959,"ndarray::aliases"],[960,"ndarray::aliases"],[961,"core::sync::atomic"],[962,"alloc::sync"],[963,"cpal::platform::platform_impl"],[964,"cpal"],[965,"std::thread"],[966,"core::ops::function"],[967,"indicatif::progress_bar"]],"d":["","This module defines the command line interface for the …","Some constants which control the default model behaviour.","","","","","","Connecting to the robot using the audio card’s output","This module implements some useful timeseries to use as …","This module provides some functionality for training the …","","","","","","","","","","","","","","Arguments for the drum output mode","","","","","","","","Output to midi, without delay compensation","","","","","","","","","","Output to audio, used by the robot to control the motor. …","","","","","","","","","","","","","The activation function to use","The algorithm used to generate rhythmic patterns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The beats per minute on which the model is trained","handle midi incomping messages","The midi CC value to adjust","The channel to filter inputs on","The midi channel to output on","The midi channel to output on","","The amount of notes that make up a chord","","","","","","","","","","","","","","","","","","","The subcommand to run","The test to run","","connectivity","The name of the train data","","","","","","","","","The amount of delay compensation to apply","Chebyshev density (amount of zeros per beat, approximately)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The device to listen on","Do not prematurely stop if the error increases","","","","","","","","","","","","","","","","","","","","","","","Duration of arpeggio notes","The amount of seconds of data to generate","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate input-output data to train the reservoir, based …","Use the grid structure","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of reservoir inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","The amount of iterations","The amount of onsets in the euclidean rhythm","The amount of onsets in the euclidean rhythm","The amount of onsets in the euclidean rhythm","Neuron leak rate","Training step: learning rate","List the available model names","List the available data names","","Port on which the midi inputs come in","The port on which to listen for midi chords","The train update that’s used for offline training","The mode to operate on","","The name of the model","The amount of pulses in the euclidean rhythm","The amount of pulses in the euclidean rhythm","The amount of pulses in the euclidean rhythm","Port on which the network output is published using zmq","The output cannot go below the offset","Use python-exported data","Offset for chebyshev point generation","The offset at which the rhythmic activity model was trained","Offset value around which to evolve the cc output","Port on which the network output is published using osc","The output name to write the data to (saved at …","Select either MIDI or Robot output","Amount of reservoir outputs","The port on which to publish midi messages","Regularization parameter","","run the selected model, determined by the parameters in …","The amount with which to scale (speed up) the rhythm …","The scaling between the user and the system","","","","","","","","The shell for which to generate completions (only zsh …","Shift the target data to achieve delay compensation [ms]","The size of the reservoir","spectral radius","Split between train and test","Should the data generate a steady-state input phase …","The width of a target value","The amount of ms between evaluations","The amount of ms between evaluationshe variance to apply to the input data (is actually std …","","","","","","","","","","","","","","","","","","","","","","","The width (# timesteps) of an input","the width of the adjustment","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","Load the training data from a <code>.bin</code> file","","","","","","","","","","","","","","","","","","","","","","A ESN (Echo State Network) reservoir.","A builder for the Reservoir struct.","","activation function","","","","","","","","","Data handling for the reservoir: saving and loading models","","","","","","","","","","forward the externally supplied state, and return the …","Returns the argument unchanged.","Returns the argument unchanged.","","Create a reservoir with a grid structure.","","","","","","","Set the sparse representation if it doesn’t already exist","","","","","number of inputs","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","leak rate of the neurons","","","","","output layer of the reservoir","","","","","","","","","","","","","","","","","Perform some gradient descent training steps on the …","Train the reservoir using the pseudo-inverse method.","","","","","","","","","output weights (reservoir -&gt; output) these are the …","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A pulse wave with given width in seconds","A single sawtooth with given width","A sine wave with given frequency and width","A parabolic sloping descent","A saw that slowly goes up too","Wave types should be able to generate a vector of samples","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Start the audio engine and pass signals to the robot","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,31,0,12,29,0,0,29,0,31,0,0,0,20,29,0,11,11,14,29,0,20,0,0,20,0,0,29,14,0,0,29,0,12,34,29,0,0,29,0,34,18,19,26,10,18,19,21,24,25,30,2,17,13,15,16,32,33,26,10,18,19,21,24,25,30,2,17,13,15,16,32,33,29,20,31,34,29,20,31,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,19,0,15,2,15,16,2,2,10,11,2,12,13,14,15,16,10,11,2,12,13,14,15,16,0,26,26,33,26,18,18,10,18,11,19,20,21,2,12,13,19,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,18,11,19,20,21,24,25,2,18,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,16,19,26,29,10,18,11,11,19,20,20,21,24,25,30,2,12,17,31,31,13,14,14,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,26,29,10,18,19,20,21,24,25,30,2,17,31,13,15,16,32,33,34,26,29,10,18,19,20,21,24,25,30,2,17,31,13,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,0,18,26,10,18,19,21,24,25,30,2,17,13,15,16,32,33,29,20,31,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,18,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,18,21,25,25,18,18,10,18,10,10,16,18,2,2,10,21,25,25,10,15,18,19,13,15,10,19,13,18,2,18,0,0,19,25,18,11,19,20,21,24,25,30,18,18,18,18,19,18,10,18,11,20,31,14,10,11,2,12,13,14,15,16,11,12,14,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,11,20,31,14,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,0,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,0,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,0,26,29,10,18,19,20,21,24,25,30,2,17,31,13,15,16,32,33,34,26,29,10,18,19,20,21,24,25,30,2,17,31,13,15,16,32,33,34,11,12,14,19,26,29,10,18,11,19,20,21,24,25,30,2,12,17,31,13,14,15,16,32,33,34,18,15,0,0,0,46,46,0,0,46,46,46,46,46,46,46,0,0,46,46,46,46,0,0,0,0,0,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,64,59,59,64,59,64,59,64,59,59,0,64,59,64,59,59,64,59,59,59,59,64,59,59,64,64,64,59,64,64,59,59,59,59,64,59,59,64,59,64,59,64,59,64,59,59,59,59,64,59,59,59,59,59,59,59,59,64,59,59,64,59,64,59,59,59,64,59,64,59,64,59,64,59,59,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,69,69,69,69,69,69,69,69,0,0,0,0,0,0,0,0,0,0,0,0],"f":"`````````````````````````````````````````````````````````{bb}0000000000000000000000000000000000000{ce{}{}}0000000000000000000000000000000000000000000`{{d{h{{f{`}}}}}{{A`{j{n{l}}}}}}````{dAb}`{AdAd}{AfAf}{dd}{AhAh}{AjAj}{AlAl}{AnAn}{B`B`}{{ce}j{}{}}0000000{{Bb{h{{f{`}}}}}{{A`{j{n{l}}}}}}{{}b}``0``{{}Ad}{{}Bd}{{}Af}{{}Bf}{{}Bh}{{}Bj}{{}d}{{}Ah}``{Blc{}}0000000000000000000000000000000000000000000{c{{A`{Bd}}}Bn}{c{{A`{Af}}}Bn}{c{{A`{Bf}}}Bn}{c{{A`{Bh}}}Bn}{c{{A`{Bj}}}Bn}{c{{A`{C`}}}Bn}{c{{A`{Cb}}}Bn}``{Blj}000000000000000000000``{{CdCf}Ch}{{CjCf}Ch}{{AdCf}Ch}{{BdCf}Ch}{{AfCf}Ch}0{{BfCf}Ch}{{BhCf}Ch}0{{BjCf}Ch}{{C`Cf}Ch}{{CbCf}Ch}{{ClCf}Ch}{{dCf}Ch}{{AhCf}Ch}{{BbCf}Ch}{{CnCf}Ch}0{{AjCf}Ch}{{AlCf}Ch}0{{AnCf}Ch}{{B`Cf}Ch}{{D`Cf}Ch}{{DbCf}Ch}{{DdCf}Ch}{cc{}}000000000000000000000{Df{{A`{CdDh}}}}{Df{{A`{CjDh}}}}{Df{{A`{AdDh}}}}{Df{{A`{BdDh}}}}{Df{{A`{BfDh}}}}{Df{{A`{BhDh}}}}{Df{{A`{BjDh}}}}{Df{{A`{C`Dh}}}}{Df{{A`{CbDh}}}}{Df{{A`{ClDh}}}}{Df{{A`{dDh}}}}{Df{{A`{BbDh}}}}{Df{{A`{CnDh}}}}{Df{{A`{AjDh}}}}{Df{{A`{AnDh}}}}{Df{{A`{B`Dh}}}}{Df{{A`{D`Dh}}}}{Df{{A`{DbDh}}}}{Df{{A`{DdDh}}}}{Df{{A`{CdDh}}}}{Df{{A`{CjDh}}}}{Df{{A`{AdDh}}}}{Df{{A`{BdDh}}}}{Df{{A`{BfDh}}}}{Df{{A`{BhDh}}}}{Df{{A`{BjDh}}}}{Df{{A`{C`Dh}}}}{Df{{A`{CbDh}}}}{Df{{A`{ClDh}}}}{Df{{A`{dDh}}}}{Df{{A`{BbDh}}}}{Df{{A`{CnDh}}}}{Df{{A`{AjDh}}}}{Df{{A`{AnDh}}}}{Df{{A`{B`Dh}}}}{Df{{A`{D`Dh}}}}{Df{{A`{DbDh}}}}{Df{{A`{DdDh}}}}{cc{}}000000000000000000000{ce{}{}}000000000000000000000{Bf{{A`{j{n{l}}}}}}`{{}{{h{Dj}}}}00000000000000{DlDn}000{{}Bl}000000000000000000000`4444444444444444444444{cDn{}}000000000000000000000`````````````{dAb}````````````````{Db{{A`{j{n{l}}}}}}{{Ad{h{{f{`}}}}}{{A`{j{n{l}}}}}}``{{Bdc}A`E`}{{Afc}A`E`}{{Bfc}A`E`}{{Bhc}A`E`}{{Bjc}A`E`}{{C`c}A`E`}{{Cbc}A`E`}`````````{cEb{}}000{ce{}{}}0000000{Af{{h{Ed}}}}{Ah{{h{Ed}}}}{Al{{h{Ed}}}}3333333333333333333333{cAb{}}000{c{{h{e}}}{}{}}0000000000000000000005555555555555555555555{Bd{{A`{j{n{l}}}}}}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000{D`{{A`{j{n{l}}}}}}{cEf{}}000000000000000000000{Cl{{A`{j{n{l}}}}}}{{CdDf}{{A`{jDh}}}}{{CjDf}{{A`{jDh}}}}{{AdDf}{{A`{jDh}}}}{{BdDf}{{A`{jDh}}}}{{BfDf}{{A`{jDh}}}}{{BhDf}{{A`{jDh}}}}{{BjDf}{{A`{jDh}}}}{{C`Df}{{A`{jDh}}}}{{CbDf}{{A`{jDh}}}}{{ClDf}{{A`{jDh}}}}{{dDf}{{A`{jDh}}}}{{BbDf}{{A`{jDh}}}}{{CnDf}{{A`{jDh}}}}{{AjDf}{{A`{jDh}}}}{{AnDf}{{A`{jDh}}}}{{B`Df}{{A`{jDh}}}}{{D`Df}{{A`{jDh}}}}{{DbDf}{{A`{jDh}}}}{{DdDf}{{A`{jDh}}}}{{CdDf}{{A`{jDh}}}}{{CjDf}{{A`{jDh}}}}{{AdDf}{{A`{jDh}}}}{{BdDf}{{A`{jDh}}}}{{BfDf}{{A`{jDh}}}}{{BhDf}{{A`{jDh}}}}{{BjDf}{{A`{jDh}}}}{{C`Df}{{A`{jDh}}}}{{CbDf}{{A`{jDh}}}}{{ClDf}{{A`{jDh}}}}{{dDf}{{A`{jDh}}}}{{BbDf}{{A`{jDh}}}}{{CnDf}{{A`{jDh}}}}{{AjDf}{{A`{jDh}}}}{{AnDf}{{A`{jDh}}}}{{B`Df}{{A`{jDh}}}}{{D`Df}{{A`{jDh}}}}{{DbDf}{{A`{jDh}}}}{{DdDf}{{A`{jDh}}}}{{}{{Eh{Af}}}}{{}{{Eh{Ah}}}}{{}{{Eh{Al}}}}`{ce{}{}}000000000000000000000`````00{{}{{A`{Ej{n{l}}}}}}{DlAb}{Blc{}}0{c{{A`{El}}}Bn}{Blj}{cc{}}06{Dl{{A`{Bf{n{l}}}}}}{Dl{{A`{Bd{n{l}}}}}}{{}Bl}`9{cDn{}}{{}{{A`{j{n{l}}}}}}0{{DlEnBlBl{h{Bl}}}{{A`{F`{n{l}}}}}}:;{{Elc}A`E`}`={c{{h{e}}}{}{}}>{c{{A`{e}}}{}{}}0{cEf{}}{ce{}{}}{{ec{h{Ab}}}{{A`{{Fb{c}}`}}}Fd{{Fj{Ff{Eh{Fh}}c}}Fd}}{{}{{A`{Fl`}}}}{{FlFn}j}{{FlFnFhFh}j}{{{h{Fh}}{h{Ab}}}{{A`{{Gd{{Gb{FfG`}}}}{n{l}}}}}}{{{n{Gf}}}j}3{GhGj}{Gj{{Gn{{Gb{Ab{Gn{Gl}}}}}}}}{{Dl{Gn{Gl}}Gj}j}````{{GfEn}j}::::{H`Gf}{GfGf}{{ce}j{}{}}`{Blc{}}000{c{{A`{Gf}}}Bn}{Blj}0{{GfCf}Ch}{{Gf{Hb{En}}}j}{{Gf{Hb{En}}{Hb{En}}}{{Hb{En}}}}{cc{}}0{BdGf}{{H`BlBlBl}H`}{{H`Ej}H`}33{{H`BlBlBlEn}H`}{ce{}{}}0{Gfj}{{GfBl}En}{Gf{{Hd{En}}}}{{}Bl}0`44{cDn{}}0{{H`En}H`}`0{Ej{{A`{Gf{n{l}}}}}}{Dl{{A`{Gf{n{l}}}}}}{{}H`}`38{{GfDl}{{A`{j{n{l}}}}}}{{GfEj}{{A`{j{n{l}}}}}}{{Gf{h{En}}}j}{{Gfc}A`E`}{{Gf{Hf{En}}}j}{cEb{}}???{cAb{}}{c{{h{e}}}{}{}}0{ce{}{}}0{{Gf{Eh{{Hb{En}}}}{Eh{{h{{Hb{En}}}}}}}En}0{c{{A`{e}}}{}{}}000{cEf{}}033```33{Blc{}}0{c{{A`{Hh}}}Bn}{Blj}{{HhCf}Ch}{cc{}}08`{{}Bl}9{cDn{}}````:;:887:``````::{HjHj}{{ce}j{}{}}886{{HjCf}Ch}55={{HjHl}{{Hn{Hl}}}}5>4{{{Ib{I`}}Hj}{{Gb{IdIf{Ih{j}}}}}}??{c{{h{e}}}{}{}}{ce{}{}}??>0{En{{n{Ij}}}}0{{EnIl}{{n{Ij}}}}{{IlEnEn}{{n{Ij}}}}{{IlEnEnEn}{{n{Ij}}}}{{IlEnEnIl}{{n{Ij}}}}12{{{Gn{{Hb{En}}}}{Eh{En}}}j}{{{Gn{{Hb{En}}}}{Eh{Ij}}{In{Bl}}}j}{FfJ`}{Dlj}","c":[],"p":[[5,"Command",935],[5,"MidiBrokerArgs",11],[5,"Sender",936],[6,"Option",937],[1,"unit"],[10,"Error",938],[5,"Box",939],[6,"Result",940],[5,"String",941],[5,"RunArgs",11],[6,"TrainMode",11],[6,"BrokerMode",11],[5,"DrumArgs",11],[6,"DrumOutput",11],[5,"CCArgs",11],[5,"ArpeggioArgs",11],[5,"CombinerArgs",11],[5,"TrainArgs",11],[5,"GenerateDataArgs",11],[6,"RhythmAlgorithm",11],[5,"EucledeanArgs",11],[1,"usize"],[10,"Deserializer",942],[5,"NPDAGArgs",11],[5,"PolyEuclideanArgs",11],[5,"Arguments",11],[5,"Formatter",943],[8,"Result",943],[6,"Command",11],[5,"CompletionsArgs",11],[6,"OutputMode",11],[5,"TuiArgs",11],[5,"RobotArgs",11],[6,"RobotCommand",11],[5,"ArgMatches",944],[8,"Error",945],[5,"Id",946],[1,"str"],[1,"bool"],[10,"Serializer",947],[5,"CompactString",948],[5,"PossibleValue",949],[5,"TypeId",950],[1,"slice"],[5,"PathBuf",951],[5,"TrainData",746],[1,"f64"],[8,"Data",746],[5,"MidiInputConnection",952],[10,"Send",953],[1,"u64"],[1,"u8"],[10,"FnMut",954],[5,"MidiOutputConnection",952],[1,"u32"],[5,"KeyEvent",955],[1,"tuple"],[5,"Receiver",936],[5,"Reservoir",789],[1,"u16"],[5,"UdpSocket",956],[6,"OscType",957],[5,"Vec",958],[5,"ReservoirBuilder",789],[8,"Array1",959],[8,"ArrayView1",959],[8,"Array2",959],[5,"NpyMetaData",866],[6,"WaveType",893],[1,"f32"],[5,"VecDeque",960],[5,"AtomicBool",961],[5,"Arc",962],[5,"Stream",963],[5,"SupportedStreamConfig",964],[5,"JoinHandle",965],[10,"Fn",954],[1,"i32"],[5,"Range",966],[5,"ProgressBar",967]],"b":[[261,"impl-Debug-for-TrainMode"],[262,"impl-Display-for-TrainMode"],[264,"impl-Debug-for-RhythmAlgorithm"],[265,"impl-Display-for-RhythmAlgorithm"],[273,"impl-Display-for-OutputMode"],[274,"impl-Debug-for-OutputMode"],[276,"impl-Debug-for-DrumOutput"],[277,"impl-Display-for-DrumOutput"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
